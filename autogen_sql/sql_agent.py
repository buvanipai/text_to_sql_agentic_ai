import re
from autogen_agentchat.agents import AssistantAgent
from autogen_ext.models.ollama import OllamaChatCompletionClient

class SQLAgent:
    """
    Given a question, schema summary, and a step-by-step plan,
    generate the SQLite-compatible SQL query that implements the plan.
    """
    
    def __init__(self, model: str = "mistral", temperature: float = 0.0):
        self.model_client = OllamaChatCompletionClient(model=model, temperature=temperature)
        system_prompt = (
            """
            You are a SQL Expert Agent.
            Produce a valid SQLite query that answers the user's question
            based on the provided schema summary and plan.
            Strictly only output the SQL statement (no explanation).
            """
        )
        self.agent = AssistantAgent(
            name="SQLAgent",
            model_client=self.model_client,
            system_message=system_prompt,
        )
        
    async def generate(self, question: str, schema_summary: str, plan: str) -> str:
        """
        Return the SQL string generated by the model.
        """
        prompt = (
            f"Question:\n{question}\n\n"
            f"Schema Summary:\n{schema_summary}\n\n"
            f"Plan:\n{plan}\n\n"
            "Please provide the SQL query."
        )
        
        resp = await self.agent.run(task=prompt)
        
        raw = None
        for msg in resp.messages:
            if msg.source == self.agent.name:
                raw = msg.content.strip()
                break
        if raw is None:
            raw = resp.messages[-1].content.strip()
            
        # Strip markdown code
        m = re.match(r"^```(?:sql)?\s*([\s\S]*?)\s*```$", raw)
        if m:
            sql= m.group(1).strip()
        else:
            sql = raw
        
        return sql